/ Created by libAntimony v2.8.1
model *Bray1995_chemotaxis_receptorlinkedcomplex()
{{ DefineVariables Begin }}
import collections
"""
rn is the reaction number
m1, m2, m3, mf are molecules in the reaction
k1, k2 are kinetics constants
"""
CT = collections.namedtuple('CT', 'nm m1 m2 mf')  # Complex transformation
MT = collections.namedtuple('MT', 'nm m1 m2 m3')  # Moiety transfer
MA = collections.namedtuple('MA', 'nm m1 m2')  # Moiety addition
MR = collections.namedtuple('MR', 'nm m1 m2')  # Moiety removal
BMR = collections.namedtuple('BMR', 'nm m1 m2 m3')  # Biomolecular moiety removal
ct_raw = [ 
           (1,  'TT',    'W'),   
           (2,  'W',     'AA'),   
           (3,  'TT',    'WAA'),   
           (4,  'TTW',   'WAA'),   
           (5,  'TTWW',  'AA'),   
           (6,  'TT',    'WWAA'),   
           (7,  'TT',    'AA'),   
           (8,  'TTW',   'AA'),   
           (9,  'TTWAA', 'W', 'TTWWAA'),   
           (10, 'TTW',   'W'),   
           (11, 'W',     'WAA'),   
           (12, 'TTAA',  'W', 'TTWAA')
         ]
ct_definitions = [CT(x[0], x[1], x[2], x[1] + x[2]) if len(x) == 3 
                      else CT(x[0], x[1], x[2], x[3]) for x in ct_raw]
mr_definitions = [
                  MR(8,  'Y', 'p'), 
                  MR(10, 'B', 'p'), 
                 ]
bmr_definitions = [
                   BMR(9,  'Y', 'p', 'Z'), 
                  ]
ma_definitions = [
                  MA(1, 'TTWWAA', 'p'), 
                  MA(2, 'AA',     'p'), 
                  MA(3, 'WAA',    'p'), 
                  MA(4, 'WWAA',   'p'), 
                  MA(5, 'TTAA',   'p'), 
                  MA(6, 'TTWAA',  'p'), 
                  MA(7, 'Y',      'p'), 
                 ]
tuples = [
          (1, 'AA',), 
          (2, 'WAA'), 
          (3, 'WWAA'),
          (4, 'TTAA'),
          (5, 'TTWAA'),
          (6, 'TTWWAA')
         ]
mt_definitions = [MT(t[0], 'B', t[1], 'p') for t in tuples]
mt_definitions.extend([MT(t[0] + 6, 'Y', t[1], 'p') for t in tuples])
api.addDefinitions({
                    'ct': ct_definitions,
                    'mr': mr_definitions,
                    'bmr': bmr_definitions,
                    'ma': ma_definitions,
                    'mt': mt_definitions,
                  })
{{ DefineVariables End }}

  // Compartments and Species:
  compartment cell;
  species AA in cell, AAp in cell, W in cell, WAA in cell, WAAp in cell, WWAA in cell;
  species WWAAp in cell, TT in cell, TTW in cell, TTWW in cell, TTWAA in cell;
  species TTWAAp in cell, TTAA in cell, TTAAp in cell, TTWWAA in cell, TTWWAAp in cell;
  species Y in cell, Yp in cell, Z in cell, B in cell, Bp in cell, SetYp in cell;

  // Assignment Rules:
  Bias := 1 - Yp^Hill/(2.333*SetYp^Hill + Yp^Hill);

// Reactions:
//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
//  complex_r1: TTW -> TT + W; cell*(complex_r1_k1*TTW - complex_r1_k2*TT*W);
//  complex_r2: WAA -> W + AA; cell*(complex_r2_k1*WAA - complex_r2_k2*W*AA);
//  complex_r3: TTWAA -> TT + WAA; cell*(complex_r3_k1*TTWAA - complex_r3_k2*TT*WAA);
//  complex_r4: TTWWAA -> TTW + WAA; cell*(complex_r4_k1*TTWWAA - complex_r4_k2*TTW*WAA);
//  complex_r5: TTWWAA -> TTWW + AA; cell*(complex_r5_k1*TTWWAA - complex_r5_k2*TTWW*AA);
//  complex_r6: TTWWAA -> TT + WWAA; cell*(complex_r6_k1*TTWWAA - complex_r6_k2*TT*WWAA);
//  complex_r7: TTAA -> TT + AA; cell*(complex_r7_k1*TTAA - complex_r7_k2*TT*AA);
//  complex_r8: TTWAA -> TTW + AA; cell*(complex_r8_k1*TTWAA - complex_r8_k2*TTW*AA);
//  complex_r9: TTWWAA -> TTWAA + W; cell*(complex_r9_k1*TTWWAA - complex_r9_k2*TTWAA*W);
//  complex_r10: TTWW -> TTW + W; cell*(complex_r10_k1*TTWW - complex_r10_k2*TTW*W);
//  complex_r11: WWAA -> W + WAA; cell*(complex_r11_k1*WWAA - complex_r11_k2*W*WAA);
//  complex_r12: TTWAA -> TTAA + W; cell*(complex_r12_k1*TTWAA - complex_r12_k2*TTAA*W);
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

complex_r{ct.nm}: {ct.mf} -> {ct.m1} + {ct.m2}; cell*(complex_r{ct.nm}_k1*{ct.mf} - complex_r{ct.nm}_k2*{ct.m1}*{ct.m2});


//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
//  phosphorylation_r1: TTWWAA => TTWWAAp; cell*phosphorylation_r1_k1*TTWWAA;
//  phosphorylation_r2: AA => AAp; cell*phosphorylation_r2_k1*AA;
//  phosphorylation_r3: WAA => WAAp; cell*phosphorylation_r3_k1*WAA;
//  phosphorylation_r4: WWAA => WWAAp; cell*phosphorylation_r4_k1*WWAA;
//  phosphorylation_r5: TTAA => TTAAp; cell*phosphorylation_r5_k1*TTAA;
//  phosphorylation_r6: TTWAA => TTWAAp; cell*phosphorylation_r6_k1*TTWAA;
//  phosphorylation_r7: Y => Yp; cell*phosphorylation_r7_k1*Y;
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// Moiety additions for phosphorylation

phosphorylation_r{ma.nm}: {ma.m1} => {ma.m1}{ma.m2}; cell*phosphorylation_r{ma.nm}_k1*{ma.m1};


//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
//  phosphorylation_r8: Yp => Y; cell*phosphorylation_r8_k1*Yp;
//  phosphorylation_r9: Yp + Z => Y + Z; cell*phosphorylation_r9_k1*Yp*Z;
//  phosphorylation_r10: Bp => B; cell*phosphorylation_r10_k1*Bp;
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// Moiety removal for dephosphorylation

phosphorylation_r{mr.nm}: {mr.m1}{mr.m2} => {mr.m1}; cell*phosphorylation_r{mr.nm}_k1*{mr.m1}{mr.m2};
phosphorylation_r{bmr.nm}: {bmr.m1}{bmr.m2} + {bmr.m3} => {bmr.m1} + {bmr.m3}; cell*phosphorylation_r{bmr.nm}_k1*{bmr.m1}{bmr.m2}*{bmr.m3};


//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
//  phosphotransfer_r1: B + AAp => Bp + AA; cell*phosphotransfer_r1_k1*B*AAp;
//  phosphotransfer_r2: B + WAAp => Bp + WAA; cell*phosphotransfer_r2_k1*B*WAAp;
//  phosphotransfer_r3: B + WWAAp => Bp + WWAA; cell*phosphotransfer_r3_k1*B*WWAAp;
//  phosphotransfer_r4: B + TTAAp => Bp + TTAA; cell*phosphotransfer_r4_k1*B*TTAAp;
//  phosphotransfer_r5: B + TTWAAp => Bp + TTWAA; cell*phosphotransfer_r5_k1*B*TTWAAp;
//  phosphotransfer_r6: B + TTWWAAp => Bp + TTWWAA; cell*phosphotransfer_r6_k1*B*TTWWAAp;
//  phosphotransfer_r7: Y + AAp => Yp + AA; cell*phosphotransfer_r7_k1*Y*AAp;
//  phosphotransfer_r8: Y + WAAp => Yp + WAA; cell*phosphotransfer_r8_k1*Y*WAAp;
//  phosphotransfer_r9: Y + WWAAp => Yp + WWAA; cell*phosphotransfer_r9_k1*Y*WWAAp;
//  phosphotransfer_r10: Y + TTAAp => Yp + TTAA; cell*phosphotransfer_r10_k1*Y*TTAAp;
//  phosphotransfer_r11: Y + TTWAAp => Yp + TTWAA; cell*phosphotransfer_r11_k1*Y*TTWAAp;
//  phosphotransfer_r12: Y + TTWWAAp => Yp + TTWWAA; cell*phosphotransfer_r12_k1*Y*TTWWAAp;
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// Moiety transfer for phosphotransfer
// This example illustrates how further simplifications can be made by using
// Python programming capabilities.

phosphotransfer_r{mt.nm}: {mt.m1} + {mt.m2}{mt.m3} => {mt.m1}{mt.m3} + {mt.m2}; cell*phosphotransfer_r{mt.nm}_k1*{mt.m1}*{mt.m2}{mt.m3};

  // Species initializations:
  AA = 2.5e-06;
  AAp = 0;
  W = 5e-06;
  WAA = 0;
  WAAp = 0;
  WWAA = 0;
  WWAAp = 0;
  TT = 2.5e-06;
  TTW = 0;
  TTWW = 0;
  TTWAA = 0;
  TTWAAp = 0;
  TTAA = 0;
  TTAAp = 0;
  TTWWAA = 0;
  TTWWAAp = 0;
  Y = 1e-05;
  Yp = 0;
  Z = 2e-05;
  B = 2e-06;
  Bp = 0;
  SetYp = 1.63e-06;

  // Compartment initializations:
  cell = 1.41;


{{ DefineVariables Begin }}
KC = collections.namedtuple('KC', 'nm k1 k2')  # Complex
KPP = collections.namedtuple('KPP', 'nm k1 k2') # Phosphorylation
KPT = collections.namedtuple('KPT', 'nm k1 k2') # Phosphotransfer
kc_definitions = {KC(1, 0.00365, 1000000),
                  KC(2, 0.00894, 1000000),
                  KC(3, 297, 1000000),
                  KC(4, 0.64, 1000000),
                  KC(5, 0.112, 1000000),
                  KC(6, 0.0229, 1000000),
                  KC(7, 39.3, 1000000),
                  KC(8, 727, 1000000),
                  KC(9, 7.87e-06, 1000000),
                  KC(10, 0.0511, 1000000),
                  KC(11, 0.102, 1000000),
                  KC(12, 0.0676, 1000000),
                 }
api.addDefinitions({'kc': kc_definitions})
{{ DefineVariables End }}
//  complex_r1_k1 = 0.00365;
//  complex_r1_k1 has persec;
//  complex_r1_k2 = 1000000;
//  complex_r1_k2 has perMpersec;
//  complex_r2_k1 = 0.00894;
//  complex_r2_k1 has persec;
//  complex_r2_k2 = 1000000;
//  complex_r2_k2 has perMpersec;
//  complex_r3_k1 = 297;
//  complex_r3_k1 has persec;
//  complex_r3_k2 = 1000000;
//  complex_r3_k2 has perMpersec;
//  complex_r4_k1 = 0.64;
//  complex_r4_k1 has persec;
//  complex_r4_k2 = 1000000;
//  complex_r4_k2 has perMpersec;
//  complex_r5_k1 = 0.112;
//  complex_r5_k1 has persec;
//  complex_r5_k2 = 1000000;
//  complex_r5_k2 has perMpersec;
//  complex_r6_k1 = 0.0229;
//  complex_r6_k1 has persec;
//  complex_r6_k2 = 1000000;
//  complex_r6_k2 has perMpersec;
//  complex_r7_k1 = 39.3;
//  complex_r7_k1 has persec;
//  complex_r7_k2 = 1000000;
//  complex_r7_k2 has perMpersec;
//  complex_r8_k1 = 727;
//  complex_r8_k1 has persec;
//  complex_r8_k2 = 1000000;
//  complex_r8_k2 has perMpersec;
//  complex_r9_k1 = 7.87e-06;
//  complex_r9_k1 has persec;
//  complex_r9_k2 = 1000000;
//  complex_r9_k2 has perMpersec;
//  complex_r10_k1 = 0.0511;
//  complex_r10_k1 has persec;
//  complex_r10_k2 = 1000000;
//  complex_r10_k2 has perMpersec;
//  complex_r11_k1 = 0.102;
//  complex_r11_k1 has persec;
//  complex_r11_k2 = 1000000;
//  complex_r11_k2 has perMpersec;
//  complex_r12_k1 = 0.0676;
//  complex_r12_k1 has persec;
//  complex_r12_k2 = 1000000;
//  complex_r12_k2 has perMpersec;

  // Variable initializations:
  Hill = 4;
  Bias has dimensionless;
  complex_r{kc.nm}_k1 = {kc.k1};
  complex_r{kc.nm}_k1 has persec;
  complex_r{kc.nm}_k2 = {kc.k2};
  complex_r{kc.nm}_k2 has perMpersec;
  phosphorylation_r1_k1 = 15.5;
  phosphorylation_r1_k1 has persec;
  phosphorylation_r2_k1 = 0.0227;
  phosphorylation_r2_k1 has persec;
  phosphorylation_r3_k1 = 0.0227;
  phosphorylation_r3_k1 has persec;
  phosphorylation_r4_k1 = 0.0227;
  phosphorylation_r4_k1 has persec;
  phosphorylation_r5_k1 = 0.0227;
  phosphorylation_r5_k1 has persec;
  phosphorylation_r6_k1 = 0.0227;
  phosphorylation_r6_k1 has persec;
  phosphorylation_r7_k1 = 0.00124;
  phosphorylation_r7_k1 has persec;
  phosphorylation_r8_k1 = 0.037;
  phosphorylation_r8_k1 has persec;
  phosphorylation_r9_k1 = 500000;
  phosphorylation_r9_k1 has perMpersec;
  phosphorylation_r10_k1 = 0.35;
  phosphorylation_r10_k1 has persec;
  phosphotransfer_r1_k1 = 6000000;
  phosphotransfer_r1_k1 has perMpersec;
  phosphotransfer_r2_k1 = 6000000;
  phosphotransfer_r2_k1 has perMpersec;
  phosphotransfer_r3_k1 = 6000000;
  phosphotransfer_r3_k1 has perMpersec;
  phosphotransfer_r4_k1 = 6000000;
  phosphotransfer_r4_k1 has perMpersec;
  phosphotransfer_r5_k1 = 6000000;
  phosphotransfer_r5_k1 has perMpersec;
  phosphotransfer_r6_k1 = 6000000;
  phosphotransfer_r6_k1 has perMpersec;
  phosphotransfer_r7_k1 = 30000000;
  phosphotransfer_r7_k1 has perMpersec;
  phosphotransfer_r8_k1 = 30000000;
  phosphotransfer_r8_k1 has perMpersec;
  phosphotransfer_r9_k1 = 30000000;
  phosphotransfer_r9_k1 has perMpersec;
  phosphotransfer_r10_k1 = 30000000;
  phosphotransfer_r10_k1 has perMpersec;
  phosphotransfer_r11_k1 = 30000000;
  phosphotransfer_r11_k1 has perMpersec;
  phosphotransfer_r12_k1 = 30000000;
  phosphotransfer_r12_k1 has perMpersec;

  // Other declarations:
  var Bias;
  const cell, Hill;

  // Unit definitions:
  unit perMpersec = litre / (mole * second);
  unit persec = 1 / second;
  unit volume = 1e-15 litre;
  unit M = mole / litre;
  unit Mpersec = mole / (litre * second);

  // Display Names:
  volume is "femtolitre";
  SetYp is "setYp";
end

